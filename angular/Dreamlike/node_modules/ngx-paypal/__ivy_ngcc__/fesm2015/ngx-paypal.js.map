{"version":3,"file":"ngx-paypal.js","sources":["../../src/lib/services/script.service.ts","../../src/lib/services/paypal-script.service.ts","../../src/lib/components/paypal.component.ts","../../src/lib/ngx-paypal.module.ts","../../src/lib/models/paypal-models.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, NgZone } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class ScriptService {\r\n\r\n    constructor(\r\n        protected zone: NgZone,\r\n    ) {\r\n    }\r\n\r\n    registerScript(url: string, globalVar: string, onReady: (globalVar: any) => void): void {\r\n        const existingGlobalVar = (window as any)[globalVar];\r\n        if (existingGlobalVar) {\r\n            // global variable is present = script was already loaded\r\n            this.zone.run(() => {\r\n                onReady(existingGlobalVar);\r\n            });\r\n            return;\r\n        }\r\n\r\n\r\n        // prepare script elem\r\n        const scriptElem = document.createElement('script');\r\n        scriptElem.id = this.getElemId(globalVar);\r\n        scriptElem.innerHTML = '';\r\n        scriptElem.onload = () => {\r\n            this.zone.run(() => {\r\n                onReady((window as any)[globalVar]);\r\n            });\r\n        };\r\n        scriptElem.src = url;\r\n        scriptElem.async = true;\r\n        scriptElem.defer = true;\r\n\r\n        // add script to header\r\n        document.getElementsByTagName('head')[0].appendChild(scriptElem);\r\n    }\r\n\r\n    cleanup(globalVar: string): void {\r\n        // remove script from DOM\r\n        const scriptElem = document.getElementById(this.getElemId(globalVar));\r\n\r\n        if (scriptElem) {\r\n            scriptElem.remove();\r\n        }\r\n    }\r\n\r\n    private getElemId(globalVar: string): string {\r\n        return `ngx-paypal-script-elem-${globalVar}`;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { IPayPalUrlConfig, IQueryParam } from '../models/paypal-models';\r\nimport { ScriptService } from './script.service';\r\n\r\n@Injectable()\r\nexport class PayPalScriptService {\r\n\r\n    private readonly paypalWindowName = 'paypal';\r\n\r\n\r\n    constructor(\r\n        protected scriptService: ScriptService,\r\n    ) {\r\n    }\r\n\r\n    registerPayPalScript(config: IPayPalUrlConfig, onReady: (payPalApi: any) => void): void {\r\n        this.scriptService.registerScript(this.getUrlForConfig(config), this.paypalWindowName, onReady);\r\n    }\r\n\r\n    destroyPayPalScript(): void {\r\n        this.scriptService.cleanup(this.paypalWindowName);\r\n    }\r\n\r\n    private getUrlForConfig(config: IPayPalUrlConfig): string {\r\n        const params: IQueryParam[] = [\r\n            {\r\n                name: 'client-id',\r\n                value: config.clientId\r\n            }\r\n        ];\r\n\r\n        if (config.currency) {\r\n            params.push({\r\n                name: 'currency',\r\n                value: config.currency\r\n            });\r\n        }\r\n\r\n        if (config.commit) {\r\n            params.push({\r\n                name: 'commit',\r\n                value: config.commit\r\n            });\r\n        }\r\n\r\n        if (config.vault) {\r\n            params.push({\r\n                name: 'vault',\r\n                value: config.vault\r\n            });\r\n        }\r\n\r\n        if (config.extraParams) {\r\n            params.push(...config.extraParams);\r\n        }\r\n\r\n        return `https://www.paypal.com/sdk/js${this.getQueryString(params)}`;\r\n    }\r\n\r\n    private getQueryString(queryParams: IQueryParam[]): string {\r\n        let queryString = '';\r\n\r\n        for (let i = 0; i < queryParams.length; i++) {\r\n            const queryParam = queryParams[i];\r\n            if (i === 0) {\r\n                queryString += '?';\r\n            } else {\r\n                queryString += '&';\r\n            }\r\n\r\n            queryString += `${queryParam.name}=${queryParam.value}`;\r\n        }\r\n\r\n        return queryString;\r\n    }\r\n}\r\n","import {\r\n    AfterViewInit,\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    ElementRef,\r\n    EventEmitter,\r\n    Input,\r\n    NgZone,\r\n    OnChanges,\r\n    OnDestroy,\r\n    Output,\r\n    SimpleChanges,\r\n    ViewChild,\r\n} from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport {\r\n    ICancelCallbackData,\r\n    IClientAuthorizeCallbackData,\r\n    ICreateOrderCallbackActions,\r\n    IInitCallbackData,\r\n    IOnApproveCallbackActions,\r\n    IOnApproveCallbackData,\r\n    IOnClickCallbackActions,\r\n    IOnInitCallbackActions,\r\n    IOnShippingChangeActions,\r\n    IOnShippingChangeData,\r\n    IPayPalConfig,\r\n    ICreateSubscriptionCallbackActions,\r\n    ICreateSubscriptionCallbackData,\r\n} from '../models/paypal-models';\r\nimport { PayPalScriptService } from '../services/paypal-script.service';\r\n\r\n@Component({\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    selector: 'ngx-paypal',\r\n    template: `\r\n    <div #payPalButtonContainer [id]=\"payPalButtonContainerId\"></div>\r\n    `\r\n})\r\nexport class NgxPaypalComponent implements OnChanges, OnDestroy, AfterViewInit {\r\n\r\n    /**\r\n     * Configuration for paypal.\r\n     */\r\n    @Input() config?: IPayPalConfig;\r\n\r\n    /**\r\n     * If enabled, paypal SDK script will be loaded. Useful if you want to have multiple PayPal components on the same page\r\n     * sharing base configuration. In such a case only a single component may register script.\r\n     */\r\n    @Input() registerScript: boolean = true;\r\n\r\n    /**\r\n     * Emitted when paypal script is loaded\r\n     */\r\n    @Output() scriptLoaded = new EventEmitter<any>();\r\n\r\n    /**\r\n     * Id of the element where PayPal button will be rendered\r\n     */\r\n    public payPalButtonContainerId?: string;\r\n\r\n    private readonly ngUnsubscribe: Subject<void> = new Subject<void>();\r\n\r\n    private payPalButtonContainerElem?: ElementRef;\r\n    @ViewChild('payPalButtonContainer', { static: false }) set payPalButtonContainer(content: ElementRef) {\r\n        this.payPalButtonContainerElem = content;\r\n    }\r\n\r\n    /**\r\n     * Flag that indicates if paypal should be initialized (required for handling script load events and availability of DOM element)\r\n     */\r\n    private initializePayPal: boolean = true;\r\n\r\n    /**\r\n     * Reference to PayPal global API\r\n     */\r\n    private payPal: any;\r\n\r\n    constructor(\r\n        private paypalScriptService: PayPalScriptService,\r\n        private cdr: ChangeDetectorRef,\r\n        private ngZone: NgZone\r\n    ) {\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (!this.payPalButtonContainerId) {\r\n            this.payPalButtonContainerId = this.generateElementId();\r\n        }\r\n\r\n        // first time config setup\r\n        const config = this.config;\r\n\r\n        if (changes.config.isFirstChange()) {\r\n            if (config && this.registerScript) {\r\n                this.initPayPalScript(config, (payPal) => {\r\n                    // store reference to paypal global script\r\n                    this.payPal = payPal;\r\n                    this.doPayPalCheck();\r\n                });\r\n            }\r\n        }\r\n\r\n        // changes to config\r\n        if (!changes.config.isFirstChange()) {\r\n            this.reinitialize(config);\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.paypalScriptService.destroyPayPalScript();\r\n        this.ngUnsubscribe.next();\r\n        this.ngUnsubscribe.complete();\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.doPayPalCheck();\r\n    }\r\n\r\n    customInit(payPal: any): void {\r\n        this.payPal = payPal;\r\n        this.doPayPalCheck();\r\n    }\r\n\r\n    reinitialize(config: IPayPalConfig | undefined): void {\r\n        this.config = config;\r\n        this.payPal = undefined;\r\n        this.paypalScriptService.destroyPayPalScript();\r\n        this.payPalButtonContainerId = this.generateElementId();\r\n        this.initializePayPal = true;\r\n\r\n        if (this.payPalButtonContainerElem) {\r\n            while (this.payPalButtonContainerElem.nativeElement.firstChild) {\r\n                this.payPalButtonContainerElem.nativeElement.removeChild(this.payPalButtonContainerElem.nativeElement.firstChild);\r\n            }\r\n        }\r\n\r\n        this.cdr.detectChanges();\r\n\r\n        if (this.config) {\r\n            if (!this.payPal) {\r\n                this.initPayPalScript(this.config, (payPal) => {\r\n\r\n                    // store reference to paypal global script\r\n                    this.payPal = payPal;\r\n                    this.doPayPalCheck();\r\n                });\r\n            } else {\r\n                this.doPayPalCheck();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private doPayPalCheck(): void {\r\n        if (this.initializePayPal && this.config && this.payPal && this.payPalButtonContainerElem) {\r\n            // make sure that id is also set\r\n            if (this.payPalButtonContainerElem.nativeElement.id) {\r\n                this.initializePayPal = false;\r\n                this.initPayPal(this.config, this.payPal);\r\n            }\r\n        }\r\n    }\r\n\r\n    private initPayPalScript(config: IPayPalConfig, initPayPal: (paypal: any) => void): void {\r\n        this.paypalScriptService.registerPayPalScript({\r\n            clientId: config.clientId,\r\n            commit: config.advanced && config.advanced.commit ? config.advanced.commit : undefined,\r\n            currency: config.currency,\r\n            vault: config.vault,\r\n            extraParams: config.advanced && config.advanced.extraQueryParams ? config.advanced.extraQueryParams : []\r\n        }, (paypal) => {\r\n            this.scriptLoaded.next(paypal);\r\n            initPayPal(paypal);\r\n        });\r\n    }\r\n\r\n    private generateElementId(): string {\r\n        return `ngx-captcha-id-${new Date().valueOf()}`;\r\n    }\r\n\r\n    private initPayPal(config: IPayPalConfig, paypal: any): void {\r\n        // Running outside angular zone prevents infinite ngDoCheck lifecycle calls\r\n        this.ngZone.runOutsideAngular(() => {\r\n\r\n            // https://developer.paypal.com/docs/checkout/integrate/#2-add-the-paypal-script-to-your-web-page\r\n            const createOrder = (data: any, actions: ICreateOrderCallbackActions) => {\r\n                return this.ngZone.run(() => {\r\n                    if (config.createOrderOnClient && config.createOrderOnServer) {\r\n                        throw Error(`Both 'createOrderOnClient' and 'createOrderOnServer' are defined.\r\n                    Please choose one or the other.`);\r\n                    }\r\n\r\n                    if (!config.createOrderOnClient && !config.createOrderOnServer) {\r\n                        throw Error(`Neither 'createOrderOnClient' or 'createOrderOnServer' are defined.\r\n                    Please define one of these to create order.`);\r\n                    }\r\n\r\n                    if (config.createOrderOnClient) {\r\n                        return actions.order.create(config.createOrderOnClient(data));\r\n                    }\r\n\r\n                    if (config.createOrderOnServer) {\r\n                        return config.createOrderOnServer(data);\r\n                    }\r\n\r\n                    throw Error(`Invalid state for 'createOrder'.`);\r\n                });\r\n            };\r\n            const createSubscription = (data: ICreateSubscriptionCallbackData, actions: ICreateSubscriptionCallbackActions) => {\r\n                return this.ngZone.run(() => {\r\n                    if (config.createSubscription) {\r\n                        return config.createSubscription(data, actions);\r\n                    }\r\n                });\r\n            };\r\n            const onShippingChange = (data: IOnShippingChangeData, actions: IOnShippingChangeActions) => {\r\n                return this.ngZone.run(() => {\r\n                    if (config.onShippingChange) {\r\n                        return config.onShippingChange(data, actions);\r\n                    }\r\n                });\r\n            };\r\n            const buttonsConfig = {\r\n                style: config.style,\r\n                onApprove: (data: IOnApproveCallbackData, actions: IOnApproveCallbackActions) => {\r\n                    return this.ngZone.run(() => {\r\n                        if (config.onApprove) {\r\n                            config.onApprove(data, actions);\r\n                        }\r\n\r\n                        // capture on server\r\n                        if (config.authorizeOnServer) {\r\n                            return config.authorizeOnServer(data, actions);\r\n                        }\r\n\r\n                        // capture on client\r\n                        const onClientAuthorization = config.onClientAuthorization;\r\n                        if (onClientAuthorization) {\r\n                            actions.order.capture().then((details: IClientAuthorizeCallbackData) => {\r\n                                this.ngZone.run(() => {\r\n                                    onClientAuthorization(details);\r\n                                });\r\n                            });\r\n                            return;\r\n                        }\r\n                    });\r\n                },\r\n                onError: (error: any) => {\r\n                    this.ngZone.run(() => {\r\n                        if (config.onError) {\r\n                            config.onError(error);\r\n                        }\r\n                    });\r\n                },\r\n                onCancel: (data: ICancelCallbackData, actions: any) => {\r\n                    this.ngZone.run(() => {\r\n                        if (config.onCancel) {\r\n                            config.onCancel(data, actions);\r\n                        }\r\n                    });\r\n                },\r\n                onClick: (data: any, actions: IOnClickCallbackActions) => {\r\n                    this.ngZone.run(() => {\r\n                        if (config.onClick) {\r\n                            config.onClick(data, actions);\r\n                        }\r\n                    });\r\n                },\r\n                onInit: (data: IInitCallbackData, actions: IOnInitCallbackActions) => {\r\n                    this.ngZone.run(() => {\r\n                        if (config.onInit) {\r\n                            config.onInit(data, actions);\r\n                        }\r\n                    });\r\n                },\r\n                // Add the functions if they've been created in the config object\r\n                // The API only allows one of the two to be set\r\n                ...((config.createOrderOnClient || config.createOrderOnServer) && { createOrder }),\r\n                ...(config.createSubscription && { createSubscription }),\r\n                // The onShippingChange callback cannot be used with subscriptions\r\n                // so we only add it if it is set\r\n                ...(config.onShippingChange && { onShippingChange })\r\n            };\r\n            paypal.Buttons(buttonsConfig).render(`#${this.payPalButtonContainerId}`);\r\n        });\r\n    }\r\n}\r\n\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { NgxPaypalComponent } from './components/paypal.component';\r\nimport { ScriptService } from './services/script.service';\r\nimport { PayPalScriptService } from './services/paypal-script.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [\r\n    NgxPaypalComponent,\r\n  ],\r\n  exports: [\r\n    NgxPaypalComponent,\r\n  ],\r\n  providers: [\r\n    ScriptService,\r\n    PayPalScriptService\r\n  ]\r\n})\r\nexport class NgxPayPalModule {\r\n}\r\n\r\n\r\n","\r\nexport interface IPayPalConfig {\r\n    /**\r\n     * Currency - Defaults to USD if not provided\r\n     */\r\n    currency?: string;\r\n\r\n    /**\r\n    * Use when creating order on client\r\n    */\r\n    createOrderOnClient?: (data: any) => ICreateOrderRequest;\r\n\r\n    /**\r\n     * Use for creating orders on server. PayPal expects you to return 'orderId' in this method\r\n     */\r\n    createOrderOnServer?: (data: any) => Promise<string>;\r\n\r\n    /**\r\n     * Advanced configuration\r\n     */\r\n    advanced?: IAdvancedConfiguration;\r\n\r\n    /**\r\n     * Client id\r\n     */\r\n    clientId: string;\r\n\r\n    /**\r\n     * Shipping callback\r\n     * see https://developer.paypal.com/docs/checkout/integration-features/shipping-callback/\r\n     */\r\n    onShippingChange?: OnShippingChangeCallback;\r\n\r\n    /**\r\n     * Called when 'onApprove' event occurs\r\n     */\r\n    onApprove?: (data: IOnApproveCallbackData, actions: any) => void;\r\n\r\n    /**\r\n    * Called when authorization on client succeeds\r\n    */\r\n    onClientAuthorization?: (authorization: IClientAuthorizeCallbackData) => void;\r\n\r\n    /**\r\n     * Implement for authorizing on server side\r\n     */\r\n    authorizeOnServer?: (data: IOnApproveCallbackData, actions: any) => Promise<any>;\r\n\r\n    /**\r\n     * Button style configuration\r\n     */\r\n    style?: IPayPalButtonStyle;\r\n\r\n    /**\r\n     * Error handler\r\n     */\r\n    onError?: (err: any) => void;\r\n\r\n    /**\r\n     * Click handler\r\n     */\r\n    onClick?: (data: any, actions: IOnClickCallbackActions) => void;\r\n\r\n    /**\r\n     * Cancel handler\r\n     */\r\n    onCancel?: (data: ICancelCallbackData, actions: any) => void;\r\n\r\n    /**\r\n     * Init handler.\r\n     * can be used for validation, see: https://developer.paypal.com/docs/checkout/integration-features/validation/#\r\n     */\r\n    onInit?: (data: IInitCallbackData, actions: IOnInitCallbackActions) => void;\r\n\r\n    /**\r\n     * Create subscription handler\r\n     * https://developer.paypal.com/docs/subscriptions/integrate/\r\n     *\r\n     * Note: the vault property in the advanced configuration also has to be set to true\r\n     */\r\n    createSubscription?: (data: ICreateSubscriptionCallbackData, actions: ICreateSubscriptionCallbackActions) => void;\r\n\r\n    /**\r\n     * Vault - must be set to true when creating subscriptions\r\n     */\r\n    vault?: TrueFalse;\r\n}\r\n\r\nexport type TrueFalse = 'true' | 'false';\r\n\r\nexport interface IPayPalUrlConfig {\r\n    clientId: string;\r\n    currency?: string;\r\n    commit?: TrueFalse;\r\n    vault?: TrueFalse;\r\n    extraParams?: IQueryParam[];\r\n}\r\n\r\nexport interface IOrderDetails {\r\n    create_time: string;\r\n    update_time: string;\r\n    id: string;\r\n    intent: OrderIntent;\r\n    payer: IPayer;\r\n    status: OrderStatus;\r\n    links: ILinkDescription[];\r\n    purchase_units: IPurchaseUnit[];\r\n}\r\n\r\nexport interface IClientAuthorizeCallbackData extends IOrderDetails {\r\n    links: ILinkDescription[];\r\n}\r\n\r\nexport interface ILinkDescription {\r\n    href: string;\r\n    rel: String;\r\n    method?: LinkMethod;\r\n}\r\n\r\nexport interface IQueryParam {\r\n    name: string;\r\n    value: string;\r\n}\r\n\r\nexport type OnShippingChangeCallback = (data: IOnShippingChangeData, actions: IOnShippingChangeActions) => any;\r\n\r\nexport interface IOnShippingChangeData {\r\n    paymentToken: string;\r\n    shipping_address: any;\r\n    selected_shipping_method?: any;\r\n}\r\n\r\nexport interface IOnShippingChangeActions {\r\n    resolve: () => any;\r\n    reject: () => any;\r\n    patch: () => any;\r\n}\r\n\r\nexport type LinkMethod = 'GET' | 'POST' | 'PUT' | 'DELETE' | 'HEAD' | 'CONNECT' | 'OPTIONS' | 'PATCH';\r\n\r\nexport interface IAdvancedConfiguration {\r\n    commit?: TrueFalse;\r\n    extraQueryParams?: IQueryParam[];\r\n}\r\n\r\nexport interface IOnApproveCallbackData {\r\n    orderID: string;\r\n    payerID: string;\r\n    subscriptionID: string;\r\n}\r\n\r\nexport interface ICreateOrderCallbackActions {\r\n    order: {\r\n        create: (order: ICreateOrderRequest) => Promise<any>;\r\n    };\r\n}\r\n\r\nexport interface ICancelCallbackData {\r\n    orderID: string;\r\n}\r\n\r\nexport interface IOnApproveCallbackActions {\r\n    redirect: () => void;\r\n    restart: () => void;\r\n    order: {\r\n        authorize: () => Promise<any>;\r\n        capture: () => Promise<any>;\r\n        get: () => Promise<IOrderDetails>;\r\n        patch: () => Promise<any>;\r\n    };\r\n}\r\n\r\nexport interface IOnInitCallbackActions {\r\n    enable: () => void;\r\n    disable: () => void;\r\n}\r\n\r\nexport interface ICreateSubscriptionCallbackActions {\r\n    subscription: {\r\n        create: (subscription: ICreateSubscriptionRequest) => Promise<any>;\r\n    };\r\n}\r\n\r\n// tslint:disable-next-line:no-empty-interface\r\nexport interface IInitCallbackData {\r\n}\r\n\r\n// tslint:disable-next-line:no-empty-interface\r\nexport interface ICreateSubscriptionCallbackData {\r\n}\r\n\r\nexport interface IOnClickCallbackActions {\r\n    resolve: () => void;\r\n    reject: () => void;\r\n}\r\n\r\nexport interface IPayPalButtonStyle {\r\n    label?: 'paypal' | 'checkout' | 'pay' | 'installment' | 'buynow';\r\n    size?: 'small' | 'medium' | 'large' | 'responsive';\r\n    shape?: 'pill' | 'rect';\r\n    color?: 'gold' | 'blue' | 'silver' | 'white' | 'black';\r\n    layout?: 'horizontal' | 'vertical';\r\n    tagline?: boolean;\r\n    height?: number;\r\n}\r\n\r\nexport interface ICreateOrderRequest {\r\n    intent: OrderIntent;\r\n    purchase_units: IPurchaseUnit[];\r\n\r\n    payer?: IPayer;\r\n    application_context?: IApplicationContext;\r\n\r\n}\r\n\r\nexport interface ICreateSubscriptionRequest {\r\n    plan_id: string;\r\n    quantity?: number;\r\n}\r\n\r\nexport interface IPayer {\r\n    name?: IPartyName;\r\n    email_address?: string;\r\n    payer_id?: string;\r\n    birth_date?: string;\r\n    tax_info?: ITaxInfo;\r\n    address?: IAddressPortable;\r\n    phone?: IPhone;\r\n}\r\n\r\nexport interface IApplicationContext {\r\n    brand_name?: string;\r\n    locale?: string;\r\n    landing_page?: PaypalLandingPage;\r\n    shipping_preference?: ShippingPreference;\r\n    user_action?: PayPalUserAction;\r\n    payment_method?: IPaymentMethod;\r\n    return_url?: string;\r\n    cancel_url?: string;\r\n}\r\n\r\nexport interface IPaymentMethod {\r\n    payer_selected?: PayerSelected;\r\n    payee_preferred?: PayeePreferred;\r\n}\r\n\r\nexport type PayeePreferred = 'UNRESTRICTED' | 'IMMEDIATE_PAYMENT_REQUIRED';\r\n\r\nexport type PayerSelected = 'PAYPAL_CREDIT' | 'PAYPAL';\r\n\r\nexport type PayPalUserAction = 'CONTINUE' | 'PAY_NOW';\r\n\r\nexport type ShippingPreference = 'GET_FROM_FILE' | 'NO_SHIPPING' | 'SET_PROVIDED_ADDRESS';\r\n\r\nexport type PaypalLandingPage = 'LOGIN' | 'BILLING';\r\n\r\nexport type OrderIntent = 'CAPTURE' | 'AUTHORIZE';\r\n\r\nexport type DisbursementMode = 'INSTANT' | 'DELAYED';\r\n\r\nexport type ItemCategory = 'DIGITAL_GOODS' | 'PHYSICAL_GOODS';\r\n\r\nexport type PhoneType = 'FAX' | 'HOME' | 'MOBILE' | 'OTHER' | 'PAGER';\r\n\r\nexport type TaxIdType = 'BR_CPF' | 'BR_CNPJ';\r\n\r\nexport interface IPhone {\r\n    phone_type?: PhoneType;\r\n    phone_number?: IPhoneNumber;\r\n}\r\n\r\nexport interface ITaxInfo {\r\n    tax_id: string;\r\n    tax_id_type: TaxIdType;\r\n}\r\n\r\nexport interface IPhoneNumber {\r\n    national_number: string;\r\n}\r\n\r\nexport interface IPurchaseUnit {\r\n    amount: IUnitAmount;\r\n\r\n    reference_id?: string;\r\n    payee?: IPayee;\r\n    payment_instruction?: IPaymentInstructions;\r\n    description?: string;\r\n    custom_id?: string;\r\n    invoice_id?: string;\r\n    soft_descriptor?: string;\r\n    items: ITransactionItem[];\r\n    shipping?: IShipping;\r\n}\r\n\r\nexport interface IPayee {\r\n    email_address?: string;\r\n    merchant_id?: string;\r\n}\r\n\r\nexport interface IPaymentInstructions {\r\n    platform_fees?: IPlatformFee[];\r\n    disbursement_mode?: DisbursementMode;\r\n}\r\n\r\nexport interface IPlatformFee {\r\n    amount: IUnitAmount;\r\n    payee?: IPayee;\r\n}\r\n\r\nexport interface ITransactionItem {\r\n    name: string;\r\n    unit_amount: IUnitAmount;\r\n    quantity: string;\r\n\r\n    description?: string;\r\n    sku?: string;\r\n    category?: ItemCategory;\r\n    tax?: ITax;\r\n}\r\n\r\nexport interface ITax {\r\n    currency_code: string;\r\n    value: string;\r\n}\r\n\r\nexport interface IUnitAmount {\r\n    currency_code: string;\r\n    value: string;\r\n    breakdown?: IUnitBreakdown;\r\n}\r\n\r\nexport interface IMoney {\r\n    currency_code: string;\r\n    value: string;\r\n}\r\n\r\nexport interface IUnitBreakdown {\r\n    item_total?: IUnitAmount;\r\n    shipping?: IUnitAmount;\r\n    handling?: IUnitAmount;\r\n    tax_total?: IUnitAmount;\r\n    insurance?: IUnitAmount;\r\n    shipping_discount?: IUnitAmount;\r\n    discount?: IMoney;\r\n}\r\n\r\nexport interface IPartyName {\r\n    prefix?: string;\r\n    given_name?: string;\r\n    surname?: string;\r\n    middle_name?: string;\r\n    suffix?: string;\r\n    alternate_full_name?: string;\r\n    full_name?: string;\r\n}\r\n\r\nexport interface IAddressPortable {\r\n    country_code: string;\r\n\r\n    address_line_1?: string;\r\n    address_line_2?: string;\r\n    admin_area_2?: string;\r\n    admin_area_1?: string;\r\n    postal_code?: string;\r\n}\r\n\r\nexport interface IShipping {\r\n    name?: IPartyName;\r\n    address?: IAddressPortable;\r\n}\r\n\r\nexport type OrderStatus = 'APPROVED' | 'SAVED' | 'CREATED' | 'VOIDED' | 'COMPLETED';\r\n\r\n\r\n"]}